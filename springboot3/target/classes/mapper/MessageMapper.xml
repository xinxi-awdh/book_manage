<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot3.mapper.MessageMapper">

    <resultMap id="MessageResultMap" type="com.example.springboot3.entity.Message">
        <id property="id" column="id" />
        <result property="no" column="no" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="likeCount" column="like_count" />
        <result property="replyCount" column="reply_count" />
        <result property="createdAt" column="created_at" />
        <result property="status" column="status" />
        <result property="name" column="name" />
        <result property="unit" column="unit" />
        <result property="parentId" column="parent_id" />
    </resultMap>

    <select id="selectMessages" resultMap="MessageResultMap" parameterType="map">
        SELECT m.*, s.name, s.unit
        FROM message m
        JOIN student s ON m.no = s.no
        <where>
            <if test="params.no != null">
                AND m.no = #{params.no}
            </if>
            <if test="params.title != null and params.title != ''">
                AND m.title = #{params.title}
            </if>
            <if test="params.status != null">
                AND m.status = #{params.status}
            </if>
        </where>
        ORDER BY m.created_at DESC
        <if test="params.pageSize != null and params.offset != null">
            LIMIT #{params.pageSize} OFFSET #{params.offset}
        </if>
    </select>


    <select id="countMessages" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM message m
        WHERE 1=1
        <if test="params.no != null">
            AND m.no = #{params.no}
        </if>
        <if test="params.title != null and params.title != ''">
            AND m.title = #{params.title}
        </if>
        <if test="params.status != null">
            AND m.status = #{params.status}
        </if>
    </select>


    <insert id="insertMessage" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message (no, title, content, like_count, reply_count, created_at, status)
        VALUES (#{no}, #{title}, #{content}, 0, 0, NOW(), 0)
    </insert>

    <delete id="deleteById">
        DELETE FROM message WHERE id = #{id}
    </delete>

    <update id="incrementLikeCount">
        UPDATE message SET like_count = like_count + 1 WHERE id = #{id}
    </update>

    <update id="decrementLikeCount">
        UPDATE message SET like_count = like_count - 1 WHERE id = #{id} AND like_count > 0
    </update>

    <insert id="insertReply" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message (no, title, content, like_count, reply_count, created_at, status, parent_id)
        VALUES (#{no}, #{title}, #{content}, 0, 0, NOW(), 0, #{parentId})
    </insert>

    <update id="incrementReplyCount">
        UPDATE message SET reply_count = reply_count + 1 WHERE id = #{id}
    </update>

    <select id="selectSortedMessages" resultMap="MessageResultMap" parameterType="map">
        SELECT m.*, s.name, s.unit
        FROM message m
        JOIN student s ON m.no = s.no
        <where>
            <if test="params.title != null and params.title != ''">
                AND m.title = #{params.title}
            </if>
            <if test="params.startTime != null">
                AND m.created_at &gt;= #{params.startTime}
            </if>
            <if test="params.endTime != null">
                AND m.created_at &lt;= #{params.endTime}
            </if>
            AND m.parent_id IS NULL <!-- 排除回复，仅查主留言 -->
        </where>
        ORDER BY
        <choose>
            <when test="params.sortBy == 'like'">
                m.like_count
            </when>
            <when test="params.sortBy == 'reply'">
                m.reply_count
            </when>
            <otherwise>
                m.created_at
            </otherwise>
        </choose>
        <choose>
            <when test="params.order == 'asc'">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
        <if test="params.pageSize != null and params.offset != null">
            LIMIT #{params.pageSize} OFFSET #{params.offset}
        </if>
    </select>

    <select id="selectReplies" resultMap="MessageResultMap" parameterType="long">
        SELECT m.*, s.name, s.unit
        FROM message m
                 JOIN student s ON m.no = s.no
        WHERE m.parent_id = #{parentId}
        ORDER BY m.created_at ASC
    </select>

    <select id="selectById" resultMap="MessageResultMap">
        SELECT m.*, s.name, s.unit
        FROM message m
                 JOIN student s ON m.no = s.no
        WHERE m.id = #{id}
    </select>

    <select id="selectRepliesByParentId" resultMap="MessageResultMap">
        SELECT m.*, s.name, s.unit
        FROM message m
                 JOIN student s ON m.no = s.no
        WHERE m.parent_id = #{parentId}
        ORDER BY m.created_at ASC
    </select>






</mapper>
